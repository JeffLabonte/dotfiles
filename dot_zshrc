# Fig pre block. Keep at the top of this file.
export PATH="${PATH}:${HOME}/.local/bin"

#Set GPG_TTY so gpg-agent knows where to prompt.  See gpg-agent(1)
export GPG_TTY="$(tty)"

export FZF_DEFAULT_COMMAND='rg --files --hidden -g "!.git/*"'
alias do_serverless="doctl serverless"
alias neovim_configs="cd ~/.config/nvim"

alias cd="z"

if [[ $OSTYPE == 'darwin'* ]]; then
  source ~/.openai
  export DD_TRACE_STARTUP_LOGS=0
  export DJANGO_SETTINGS_MODULE=settings.dev

  export PINENTRY_USER_DATA=USE_TTY=1

  export PATH="$PATH:/opt/homebrew/opt:$HOME/.local/bin:/opt/homebrew/opt/openssl@3/bin"
  export LDFLAGS="-L/opt/homebrew/opt/openssl@3/lib -L/opt/homebrew/lib"
  export CPPFLAGS="-I/opt/homebrew/opt/openssl@3/include -I/opt/homebrew/include"
  export PYCURL_SSL_LIBRARY=openssl

  alias openfinder='function _openfinder() { open -a Finder $1; }; _openfinder'
  alias emptytash='function _emptytash() { rm -rf ~/.Trash/*; }; _emptytash'
  alias flushdns='function _flushdns() { sudo dscacheutil -flushcache; }; _flushdns'
  alias openapp='function _openapp() { open /Applications/$1.app; }; _openapp'
  alias publicip='curl ifconfig.me'
  alias weather='function _weather() { curl wttr.in/$1; }; _weather'
  alias jsonpretty='function _jsonpretty() { python -m json.tool $1; }; _jsonpretty'


  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

  export PATH="$HOME/.pyenv/bin:$PATH"
  eval "$(pyenv init -)"

  ssh-add --apple-use-keychain  ~/.ssh/github_personnal
  # Poka Related
  alias poka_backend="cd ~/Development/Poka/projects/poka_backend && source .venv/bin/activate"
  alias html_rendering_service="cd ~/Development/Poka/projects/html-rendering-service"
  alias instance_service="cd ~/Development/Poka/instance-service/"
  
  alias run_login_aws="source ~/.bin/login_aws"

  eval "$(zoxide init zsh)"
else;
  DISTRO=$(cat /etc/os-release | grep ^ID= | tr -d "ID=")

  if [[ "fedora" == "${DISTRO}" ]]; then
    NATIVE_UPDATE_COMMAND="sudo dnf upgrade -y && sudo flatpak update"
  elif [[ "ubuntu" == "${DISTRO}" ]] then
    NATIVE_UPDATE_COMMAND="sudo apt update && sudo apt dist-upgrade -y && sudo snap refresh"
  fi

  alias update_deps="${NATIVE_UPDATE_COMMAND} && brew update && brew upgrade" 
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

fi

# Git shortcut
alias gs="git status"
alias gcommit="git commit . -p"
# alias gpush="git push -u origin $(current_branch)"
# alias gsync="git pull origin $(git branch | grep 'master\|main')"
alias edit_zsh="nvim ~/.zshrc"
alias reload_zsh="source ~/.zshrc"
alias update_brew="brew update && brew upgrade"
alias emacs="emacs -nw"

export EDITOR="nvim"
# eval "$(pyenv virtualenv-init -)"
export TERMINAL=alacritty

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.

fastfetch

# Go development
export GOPATH="${HOME}/.go"
export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"
export PATH="$PATH:$HOME/.bin"

eval "$(starship init zsh)"


eval $(thefuck --alias)

export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).
autoload -U compinit; compinit

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

eval "$(atuin init zsh)"
